#!/usr/bin/perl -w

#
# 's' figures out how to set the SANDBOX environment variable for a
# single command.
#
# e.g.:  unix% s make installhdrs
#        unix% s make
#        unix% s make install
#
# 's' needs to be repeated for each of the above since the effect
# is not persistent across commands.
#
# The point of 's' is to allow a user to have multiple coexistent
# sandboxes and just "choose the right one" for a given command.
#
# I highly recommend using 's' in conjunction with the P4CONFIG
# environment variable.
#

use strict;
use File::Basename;
use Cwd;

my $printOnly = 0;

sub safeExec {
    my @toexec = @_;
    print "+ CMD: @toexec\n";

    return if ($printOnly);

    exec (@toexec);
}

my $origin;
my $sandboxDir;

my @sandboxArgs = grep (/^SANDBOX=/, @ARGV);
if ($#sandboxArgs >= 0) {
    my $lastSandboxArg = $sandboxArgs[$#sandboxArgs];
    if ($lastSandboxArg =~ /^SANDBOX=(.*)/) {
        $sandboxDir = $1;
        $origin = "command line";
    }
    else {
        die;
    }
}
elsif (defined $ENV{"SANDBOX"}) {
    $sandboxDir = $ENV{"SANDBOX"};
    $origin = "environment";
}
else {
    my $dir = cwd();

    while (($dir ne ".") &&
           ($dir ne "..") &&
           ($dir ne "/")) {
        if (-d "${dir}/sandbox") {
            last;
        }
        $dir = dirname ($dir);
    }

    if (-d "${dir}/sandbox") {
        $sandboxDir = "${dir}/sandbox";
        $origin = "discovery";
    }
    elsif (-d "$ENV{HOME}/sandbox") {
        $sandboxDir = "$ENV{HOME}/sandbox";
        $origin = "discovery";
    }
    else {
        print "Fatal error:  SANDBOX not found.\n";
        exit 1;
    }
}

if (! (-d $sandboxDir)) {
    print "Fatal error:  SANDBOX ${sandboxDir} not found.\n";
    exit 1;
}

if ($origin eq "discovery") {
    print "Setting SANDBOX to ${sandboxDir}\n";
    $ENV{"SANDBOX"} = $sandboxDir;
}
else {
    print "SANDBOX is ${sandboxDir}\n";
}

safeExec (@ARGV);
